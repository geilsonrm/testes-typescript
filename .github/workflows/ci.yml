name: TypeScript CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: Install dependencies
      run: npm install
      
    - name: Build TypeScript
      run: npm run build

  deploy-test:
    needs: build
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
    
    - name: Install dependencies
      run: npm install
    
    - name: Build
      run: npm run build
    
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh/
        echo "${{ secrets.TEST_SSH_KEY }}" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        cat >>~/.ssh/config <<END
        Host raspberry
          HostName 187.115.149.13
          User geilsonrm
          Port 8086
          IdentityFile ~/.ssh/deploy_key
          StrictHostKeyChecking no
        END
    
    - name: Deploy to Raspberry Pi
      run: |
        # Criar diretório se não existir
        ssh raspberry 'mkdir -p ~/app'
        
        # Copiar arquivos
        rsync -avz --delete \
          --exclude '.git' \
          --exclude 'node_modules' \
          ./ raspberry:~/app/
        
        # Instalar dependências e reiniciar aplicação
        ssh raspberry 'cd ~/app && \
          npm install && \
          pm2 delete app || true && \
          pm2 start dist/index.js --name app'

  deploy-prod:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
    
    - name: Install dependencies
      run: npm install
    
    - name: Build
      run: npm run build
    
    - name: Deploy to Production
      run: |
        echo "Deploy to production server will be configured here"
        # Configuração futura para produção
