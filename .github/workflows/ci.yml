name: TypeScript CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build TypeScript
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  deploy-test:
    needs: build
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Deploy with SSH
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: 187.115.149.13
        username: geilsonrm
        port: 8086
        key: ${{ secrets.TEST_SSH_KEY }}
        script: |
          # Preparar diretório
          mkdir -p ~/app/logs
          rm -rf ~/app/*
          mkdir -p ~/app/logs
          
          # Garantir que PM2 está instalado globalmente
          npm install -g pm2
          
          # Limpar logs antigos do PM2
          pm2 flush
          
          echo "Ambiente preparado"
    
    - name: Sync files
      uses: appleboy/scp-action@v0.1.4
      with:
        host: 187.115.149.13
        username: geilsonrm
        port: 8086
        key: ${{ secrets.TEST_SSH_KEY }}
        source: "dist/,package.json,package-lock.json"
        target: "~/app"
        strip_components: 0
    
    - name: Start Application
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: 187.115.149.13
        username: geilsonrm
        port: 8086
        key: ${{ secrets.TEST_SSH_KEY }}
        script: |
          cd ~/app
          
          # Instalar dependências
          npm ci --only=production
          
          # Parar qualquer instância anterior
          pm2 delete app || true
          
          # Limpar logs antigos
          rm -f ~/.pm2/logs/app-*.log
          
          # Iniciar aplicação com PM2
          pm2 start dist/index.js \
            --name app \
            --log ~/.pm2/logs/app.log \
            --error ~/.pm2/logs/app-error.log \
            --time \
            --watch \
            --max-memory-restart 100M
          
          # Salvar configuração
          pm2 save
          
          echo "Status da aplicação:"
          pm2 list
          
          echo "Últimos logs:"
          sleep 3
          pm2 logs app --lines 10 || true

  deploy-prod:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Deploy to Production
      run: |
        echo "Deploy to production server will be configured here"
        # Configuração futura para produção
