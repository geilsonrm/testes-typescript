name: TypeScript CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: Install dependencies
      run: npm install
      
    - name: Build TypeScript
      run: npm run tsc

  deploy-test:
    needs: build
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
    
    - name: Install dependencies
      run: npm install
    
    - name: Build
      run: npm run build
    
    - name: Deploy to Test
      run: |
        echo "Deploy to test server will be configured here"
        # Aqui será adicionada a configuração de deploy para o servidor de teste
        # Exemplo de possíveis passos:
        # - Configuração de SSH
        # - Transferência de arquivos
        # - Restart do servidor

  deploy-prod:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
    
    - name: Install dependencies
      run: npm install
    
    - name: Build
      run: npm run build
    
    - name: Deploy to Production
      run: |
        echo "Deploy to production server will be configured here"
        # Aqui será adicionada a configuração de deploy para o servidor de produção
        # Exemplo de possíveis passos:
        # - Configuração de SSH
        # - Transferência de arquivos
        # - Restart do servidor
